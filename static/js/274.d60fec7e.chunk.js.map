{"version":3,"file":"static/js/274.d60fec7e.chunk.js","mappings":"oRAEaA,EAAeC,EAAAA,GAAAA,IAAH,gGAMZC,EAAUD,EAAAA,GAAAA,IAAH,4C,SCLPE,EAAY,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAEpBC,EAAS,UAAMC,KAAKC,MAA2B,GAArBH,EAAMI,cAAvB,MACTC,EAAe,IAAIC,KAAKN,EAAMO,cAAcC,cAC5CC,EAAaT,EAAMU,eACjBC,EAAcX,EAAMY,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,KAE9D,OAAU,UAACpB,EAAD,YACT,gBACEqB,IAAG,0CAAqCjB,EAAMkB,aAC9CC,IAAI,GACJC,MAAM,WAER,UAACtB,EAAD,YACE,0BACGW,EADH,KACiBJ,EADjB,QAGA,wCACeJ,MAEf,uCACA,uBAAID,EAAMqB,YACV,oCACA,uBAAIV,SAIX,E,kBC3BYW,GAAazB,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAH,iYCCV2B,EAAW,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,GAAIC,EAAe,EAAfA,SAC7B,OACE,UAACJ,EAAD,CAAYG,GAAIA,EAAhB,WACE,SAAC,MAAD,CAAaE,KAAK,OACjBD,IAGN,ECRYE,EAAY/B,EAAAA,GAAAA,IAAH,6GAMTyB,GAAazB,EAAAA,EAAAA,IAAO0B,EAAAA,GAAP1B,CAAH,kJAUVgC,EAAWhC,EAAAA,GAAAA,GAAH,6DChBRiC,EAAe,WAAO,IAAD,IAGxBC,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,IAE7C,OACI,SAACN,EAAD,WAEI,UAACC,EAAD,YACI,yBACI,SAAC,EAAD,CAAYJ,GAAI,OAAQQ,MAAO,CAAEC,KAAMH,GAAvC,qBAIJ,yBACI,SAAC,EAAD,CAAYN,GAAI,UAAWQ,MAAO,CAAEC,KAAMH,GAA1C,2BAQnB,E,SCqBD,EAvCqB,WAAO,IAAD,IACfI,GAAOC,EAAAA,EAAAA,MAAPD,GAEFJ,EAAY,qBADDC,EAAAA,EAAAA,MACaC,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UAC7C,GAA0BG,EAAAA,EAAAA,UAAS,MAAnC,eAAOrC,EAAP,KAAcsC,EAAd,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WAAM,wCACZ,8GAE+BC,EAAAA,EAAAA,IAAaL,GAF5C,OAEcM,EAFd,OAGQH,EAASG,GAHjB,iJADY,uBAAC,WAAD,wBASZC,CAAiBP,EAEpB,GAAE,CAACA,IAIHnC,IACG,2BACI,4BACI,SAACwB,EAAD,CAAUC,GAAIM,EAAd,+BACI,SAAChC,EAAD,CAAWC,MAAOA,KAClB,SAAC8B,EAAD,KACJ,SAAC,EAAAa,SAAD,CAAUC,UAAU,SAACC,EAAA,EAAD,IAApB,UACC,SAAC,KAAD,UAShB,C","sources":["components/MovieInfo/MovieInfo.styled.js","components/MovieInfo/MovieInfo.js","components/BackLink/BackLink.styled.js","components/BackLink/BackLink.js","components/AddMovieInfo/AddMovieInfo.styled.js","components/AddMovieInfo/AddMovieInfo.js","pages/MovieDetails/MovieDetails.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieInfoDiv = styled.div`\n  display: flex;\n  padding: 8px;\n  border-bottom: 1px solid #053a4c;\n`;\n\nexport const InfoDiv = styled.div`\n  padding: 0 16px;\n`;","import PropTypes from 'prop-types';\nimport { MovieInfoDiv, InfoDiv } from './MovieInfo.styled';\n\nexport const MovieInfo = ({ movie }) => {\n    \n  const userScore = `${Math.round(movie.vote_average * 10)} %`;\n  const movieRelease = new Date(movie.release_date).getFullYear();\n  const movieTitle = movie.original_title;\n    const movieGenres = movie.genres.map(genre => genre.name).join(' ');\n    \n     return  ( <MovieInfoDiv>\n      <img\n        src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`}\n        alt=\"\"\n        width=\"240px\"\n      />\n      <InfoDiv>\n        <h2>\n          {movieTitle} ({movieRelease})\n        </h2>\n        <p>\n          User Score: {userScore}\n        </p>\n        <h3>Overview:</h3>\n        <p>{movie.overview}</p>\n        <h4>Genres</h4>\n        <p>{movieGenres}</p>\n      </InfoDiv>\n    </MovieInfoDiv>\n  );   \n}\n\nMovieInfo.propTypes = {\n  movie: PropTypes.shape({\n    release_date: PropTypes.string.isRequired,\n    original_title: PropTypes.string.isRequired,\n    vote_average: PropTypes.number.isRequired,\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nexport const StyledLink = styled(Link)`\n  display: inline-flex;\n  align-items: center;\n  border-radius: 6px;\n  background-color: #edf0f1;\n  gap: 4px;\n  padding: 8px 16px;\n  color: black;\n  text-decoration: none;\n  // border-bottom: 1px solid black;\n  font-weight: 500;\n  text-transform: uppercase;\n  margin: 15px 15px;\n\n  :hover {\n    color: white;\n    background-color: #1c8591;\n  }\n`;\n","import { HiArrowLeft } from \"react-icons/hi\";\nimport { StyledLink } from \"./BackLink.styled\";\n\n\nexport const BackLink = ({ to, children }) => {\n  return (\n    <StyledLink to={to}>\n      <HiArrowLeft size=\"16\" />\n      {children}\n    </StyledLink>\n  );\n};\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const StyledDiv = styled.div`\n  border-bottom: 1px solid #053a4c;\n  // display: inline-flex;\n  padding: 0 16px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: black;\n  text-decoration: none;\n  font-size: 20px;\n  font-weight: 500;\n  :hover {\n    color: #1c8591;\n  }\n`;\n\nexport const StyledUl = styled.ul`\n display: inline-flex;\n gap: 15px;\n`","import { useLocation } from 'react-router-dom';\nimport { StyledLink, StyledDiv, StyledUl } from './AddMovieInfo.styled';\n\nexport const AddMovieInfo = () => {\n\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? '/';\n    \n    return (\n        <StyledDiv>\n            {/* <p>Additional information</p> */}\n            <StyledUl>\n                <li>\n                    <StyledLink to={'cast'} state={{ from: backLinkHref }}>\n                        Cast\n                    </StyledLink>\n                </li>\n                <li>\n                    <StyledLink to={'reviews'} state={{ from: backLinkHref }}>\n                         Reviews\n                     </StyledLink>\n                </li>\n            </StyledUl>\n        </StyledDiv>\n    )\n\n}\n// export default AddMovieInfo;","import { useState, useEffect, Suspense } from 'react';\nimport { useLocation, useParams, Outlet } from 'react-router-dom';\nimport { getMovieInfo } from 'api';\nimport { MovieInfo } from 'components/MovieInfo/MovieInfo';\nimport { BackLink } from \"components/BackLink/BackLink\";\nimport { AddMovieInfo } from 'components/AddMovieInfo/AddMovieInfo';\nimport { Loader } from 'components/Loader/Loader';\n\nconst MovieDetails = () => {\n    const { id } = useParams();\n    const location = useLocation();\n    const backLinkHref = location.state?.from ?? \"/movies\";\n    const [movie, setMovie] = useState(null);\n\n    useEffect(() => {\n        async function getMoviesDetails() {\n            try {\n                const response = await getMovieInfo(id);\n                setMovie(response);\n            } catch {\n            } finally {\n            }\n        }\n        getMoviesDetails(id);\n\n    }, [id]);\n\n    \n    return (\n     movie && (\n        <main>\n            <div>\n                <BackLink to={backLinkHref}>Back to products</BackLink>\n                    <MovieInfo movie={movie}></MovieInfo>\n                    <AddMovieInfo />\n                <Suspense fallback={<Loader />}>\n                 <Outlet />\n                </Suspense>\n                \n            </div>\n        </main>\n        )\n        \n    );\n\n};\n\nexport default MovieDetails;\n"],"names":["MovieInfoDiv","styled","InfoDiv","MovieInfo","movie","userScore","Math","round","vote_average","movieRelease","Date","release_date","getFullYear","movieTitle","original_title","movieGenres","genres","map","genre","name","join","src","poster_path","alt","width","overview","StyledLink","Link","BackLink","to","children","size","StyledDiv","StyledUl","AddMovieInfo","backLinkHref","useLocation","state","from","id","useParams","useState","setMovie","useEffect","getMovieInfo","response","getMoviesDetails","Suspense","fallback","Loader"],"sourceRoot":""}